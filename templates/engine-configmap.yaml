apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-engine-config
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-engine
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  engine.yaml: |-
    # yaml-language-server: $schema=https://raw.githubusercontent.com/ArcadeAI/schemas/main/engine/config/1.0/schema.json
    $schema: https://raw.githubusercontent.com/ArcadeAI/schemas/main/engine/config/1.0/schema.json
     
    api:
      development: ${env:API_DEVELOPMENT}
      host: ${env:ARCADE_API_HOST}
      port: ${env:ARCADE_API_PORT}
     
     
    auth:
      providers:
        - id: default-atlassian
          description: 'The default Atlassian provider'
          enabled: false
          type: oauth2
          provider_id: atlassian
          client_id: ${env:ATLASSIAN_CLIENT_ID}
          client_secret: ${env:ATLASSIAN_CLIENT_SECRET}
     
        - id: default-discord
          description: 'The default Discord provider'
          enabled: false
          type: oauth2
          provider_id: discord
          client_id: ${env:DISCORD_CLIENT_ID}
          client_secret: ${env:DISCORD_CLIENT_SECRET}
     
        - id: default-dropbox
          description: 'The default Dropbox provider'
          enabled: false
          type: oauth2
          provider_id: dropbox
          client_id: ${env:DROPBOX_CLIENT_ID}
          client_secret: ${env:DROPBOX_CLIENT_SECRET}
     
        - id: default-github
          description: 'The default GitHub provider'
          enabled: false
          type: oauth2
          provider_id: github
          client_id: ${env:GITHUB_CLIENT_ID}
          client_secret: ${env:GITHUB_CLIENT_SECRET}
     
        - id: default-google
          description: 'The default Google provider'
          enabled: false
          type: oauth2
          provider_id: google
          client_id: ${env:GOOGLE_CLIENT_ID}
          client_secret: ${env:GOOGLE_CLIENT_SECRET}
     
        - id: default-linkedin
          description: 'The default LinkedIn provider'
          enabled: false
          type: oauth2
          provider_id: linkedin
          client_id: ${env:LINKEDIN_CLIENT_ID}
          client_secret: ${env:LINKEDIN_CLIENT_SECRET}
     
        - id: default-microsoft
          description: 'The default Microsoft provider'
          enabled: false
          type: oauth2
          provider_id: microsoft
          client_id: ${env:MICROSOFT_CLIENT_ID}
          client_secret: ${env:MICROSOFT_CLIENT_SECRET}
     
        - id: default-slack
          description: 'The default Slack provider'
          enabled: false
          type: oauth2
          provider_id: slack
          client_id: ${env:SLACK_CLIENT_ID}
          client_secret: ${env:SLACK_CLIENT_SECRET}
     
        - id: default-spotify
          description: 'The default Spotify provider'
          enabled: false
          type: oauth2
          provider_id: spotify
          client_id: ${env:SPOTIFY_CLIENT_ID}
          client_secret: ${env:SPOTIFY_CLIENT_SECRET}
     
        - id: default-x
          description: 'The default X provider'
          enabled: false
          type: oauth2
          provider_id: x
          client_id: ${env:X_CLIENT_ID}
          client_secret: ${env:X_CLIENT_SECRET}
     
        - id: default-zoom
          description: 'The default Zoom provider'
          enabled: false
          type: oauth2
          provider_id: zoom
          client_id: ${env:ZOOM_CLIENT_ID}
          client_secret: ${env:ZOOM_CLIENT_SECRET}
     
     
    llm:
      models:
        - id: my-openai-model-provider
          openai:
            api_key: ${env:OPENAI_API_KEY}
     
     
    security:
      root_keys:
        - id: key1
          default: true
          value: ${env:ROOT_KEY_1}
     
     
    storage:
      postgres:
        user: postgres
        password: postgres
        host: {{ .Release.Name }}-postgres
        port: 5432
        db: arcade
        sslmode: disable
    
    cache:
      redis:
        host: {{ .Release.Name }}-redis
        port: 6379
        password: ""
        db: 0
     
     
    telemetry:
      environment: ${env:TELEMETRY_ENVIRONMENT}
      logging:
        # debug, info, warn, error
        level: ${env:TELEMETRY_LOGGING_LEVEL}
        encoding: ${env:TELEMETRY_LOGGING_ENCODING}
    
    
    tools:
      directors:
        - id: default
          enabled: true
          workers:
            - id: worker
              enabled: true
              http:
                uri: http://{{ .Release.Name }}-worker:8002
                timeout: 30
                retry: 3
                secret: ${env:ARCADE_WORKER_SECRET} 