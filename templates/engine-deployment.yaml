apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-engine
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-engine
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-engine
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-engine
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: prepare-config
          image: busybox
          command: ['sh', '-c']
          args:
            - |
              cat > /config/engine.yaml << 'EOF'
              # yaml-language-server: $schema=https://raw.githubusercontent.com/ArcadeAI/schemas/main/engine/config/1.0/schema.json
              $schema: https://raw.githubusercontent.com/ArcadeAI/schemas/main/engine/config/1.0/schema.json
               
              api:
                development: true
                host: 0.0.0.0
                port: 9099
               
               
              auth:
                providers:
                  - id: default-atlassian
                    description: 'The default Atlassian provider'
                    enabled: false
                    type: oauth2
                    provider_id: atlassian
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-discord
                    description: 'The default Discord provider'
                    enabled: false
                    type: oauth2
                    provider_id: discord
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-dropbox
                    description: 'The default Dropbox provider'
                    enabled: false
                    type: oauth2
                    provider_id: dropbox
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-github
                    description: 'The default GitHub provider'
                    enabled: false
                    type: oauth2
                    provider_id: github
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-google
                    description: 'The default Google provider'
                    enabled: false
                    type: oauth2
                    provider_id: google
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-linkedin
                    description: 'The default LinkedIn provider'
                    enabled: false
                    type: oauth2
                    provider_id: linkedin
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-microsoft
                    description: 'The default Microsoft provider'
                    enabled: false
                    type: oauth2
                    provider_id: microsoft
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-slack
                    description: 'The default Slack provider'
                    enabled: false
                    type: oauth2
                    provider_id: slack
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-spotify
                    description: 'The default Spotify provider'
                    enabled: false
                    type: oauth2
                    provider_id: spotify
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-x
                    description: 'The default X provider'
                    enabled: false
                    type: oauth2
                    provider_id: x
                    client_id: dummy
                    client_secret: dummy
               
                  - id: default-zoom
                    description: 'The default Zoom provider'
                    enabled: false
                    type: oauth2
                    provider_id: zoom
                    client_id: dummy
                    client_secret: dummy
               
               
              llm:
                models:
                  - id: my-openai-model-provider
                    openai:
                      api_key: dummy-api-key
               
               
              security:
                root_keys:
                  - id: key1
                    default: true
                    value: dummy-root-key
               
               
              storage:
                postgres:
                  user: postgres
                  password: postgres
                  host: {{ .Release.Name }}-postgres
                  port: 5432
                  db: arcade
                  sslmode: disable
              
              cache:
                redis:
                  host: {{ .Release.Name }}-redis
                  port: 6379
                  password: ""
                  db: 0
               
               
              telemetry:
                environment: development
                logging:
                  # debug, info, warn, error
                  level: info
                  encoding: console
              
              
              tools:
                directors:
                  - id: default
                    enabled: true
                    workers:
                      - id: worker
                        enabled: true
                        http:
                          uri: http://{{ .Release.Name }}-worker:8002
                          timeout: 30
                          retry: 3
                          secret: dummy-worker-secret
              EOF
          volumeMounts:
            - name: config-volume
              mountPath: /config
      containers:
        - name: engine
          image: "{{ .Values.engine.image.repository }}:{{ .Values.engine.image.tag }}"
          imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.engine.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.engine.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.engine.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # Database configuration
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-postgres
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.service.port | quote }}
            - name: POSTGRES_SSLMODE
              value: "disable"
            # Redis cache configuration
            - name: REDIS_HOST
              value: {{ .Release.Name }}-redis
            - name: REDIS_PORT
              value: {{ .Values.redis.service.port | quote }}
            - name: REDIS_PASSWORD
              value: ""
            - name: REDIS_DB
              value: "0"
          volumeMounts:
            - name: config-volume
              mountPath: /bin/engine.yaml
              subPath: engine.yaml
      volumes:
        - name: config-volume
          emptyDir: {} 